# Generated by Django 4.2.25 on 2025-10-19 19:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Chapter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "order",
                    models.IntegerField(
                        default=0, help_text="Display order in curriculum"
                    ),
                ),
                (
                    "difficulty_level",
                    models.IntegerField(
                        default=1, help_text="Overall difficulty (1-10)"
                    ),
                ),
                (
                    "is_published",
                    models.BooleanField(
                        default=False, help_text="Whether chapter is visible to users"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Chapter",
                "verbose_name_plural": "Chapters",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "order",
                    models.IntegerField(
                        default=0, help_text="Display order within chapter"
                    ),
                ),
                (
                    "learning_objectives",
                    models.TextField(blank=True, help_text="What the user will learn"),
                ),
                (
                    "estimated_minutes",
                    models.IntegerField(
                        default=10, help_text="Estimated time to complete in minutes"
                    ),
                ),
                (
                    "is_published",
                    models.BooleanField(
                        default=False, help_text="Whether lesson is visible to users"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "chapter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lessons",
                        to="api_app.chapter",
                    ),
                ),
            ],
            options={
                "verbose_name": "Lesson",
                "verbose_name_plural": "Lessons",
                "ordering": ["chapter", "order"],
                "unique_together": {("chapter", "order")},
            },
        ),
        migrations.CreateModel(
            name="Exercise",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "exercise_type",
                    models.CharField(
                        help_text="Exercise ID from registry (e.g., 'minor_third_major_third_octave_melodic')",
                        max_length=100,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Display title (can override exercise name)",
                        max_length=200,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "order",
                    models.IntegerField(
                        default=0, help_text="Display order within lesson"
                    ),
                ),
                (
                    "difficulty_level",
                    models.IntegerField(default=1, help_text="Difficulty level (1-10)"),
                ),
                (
                    "config",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Exercise-specific configuration (e.g., intervals, timing)",
                    ),
                ),
                (
                    "is_published",
                    models.BooleanField(
                        default=False, help_text="Whether exercise is visible to users"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "lesson",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exercises",
                        to="api_app.lesson",
                    ),
                ),
            ],
            options={
                "verbose_name": "Exercise",
                "verbose_name_plural": "Exercises",
                "ordering": ["lesson", "order"],
                "unique_together": {("lesson", "order")},
            },
        ),
    ]
